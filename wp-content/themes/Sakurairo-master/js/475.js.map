{"version":3,"sources":["webpack://sakurairo-scripts/./node_modules/prismjs/plugins/autoloader/prism-autoloader.js"],"names":["self","Prism","document","createElement","lang_dependencies","lang_aliases","lang_data","languages_path","script","util","currentScript","autoloaderFile","prismFile","autoloaderPath","getAttribute","trim","replace","src","test","config","plugins","autoloader","use_minified","loadLanguages","hooks","add","env","element","language","deps","parent","parentElement","tagName","toLowerCase","split","getDependencies","push","substr","length","every","isLoaded","highlightElement","lang","indexOf","languages","data","error","loading","success","total","completed","failed","successCallback","forEach","force","load","callbacks","languageCallback","s","async","onload","body","removeChild","onerror","appendChild","addScript","getLanguagePath","dependencies","loadLanguage","setTimeout","type","i","l","callback"],"mappings":"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","file":"475.js","sourcesContent":["(function () {\n\tif (typeof self === 'undefined' || !self.Prism || !self.document || !document.createElement) {\n\t\treturn;\n\t}\n\n\t/**\n\t * The dependencies map is built automatically with gulp.\n\t *\n\t * @type {Object<string, string | string[]>}\n\t */\n\tvar lang_dependencies = /*dependencies_placeholder[*/{\n\t\t\"javascript\": \"clike\",\n\t\t\"actionscript\": \"javascript\",\n\t\t\"apex\": [\n\t\t\t\"clike\",\n\t\t\t\"sql\"\n\t\t],\n\t\t\"arduino\": \"cpp\",\n\t\t\"aspnet\": [\n\t\t\t\"markup\",\n\t\t\t\"csharp\"\n\t\t],\n\t\t\"birb\": \"clike\",\n\t\t\"bison\": \"c\",\n\t\t\"c\": \"clike\",\n\t\t\"csharp\": \"clike\",\n\t\t\"cpp\": \"c\",\n\t\t\"coffeescript\": \"javascript\",\n\t\t\"crystal\": \"ruby\",\n\t\t\"css-extras\": \"css\",\n\t\t\"d\": \"clike\",\n\t\t\"dart\": \"clike\",\n\t\t\"django\": \"markup-templating\",\n\t\t\"ejs\": [\n\t\t\t\"javascript\",\n\t\t\t\"markup-templating\"\n\t\t],\n\t\t\"etlua\": [\n\t\t\t\"lua\",\n\t\t\t\"markup-templating\"\n\t\t],\n\t\t\"erb\": [\n\t\t\t\"ruby\",\n\t\t\t\"markup-templating\"\n\t\t],\n\t\t\"fsharp\": \"clike\",\n\t\t\"firestore-security-rules\": \"clike\",\n\t\t\"flow\": \"javascript\",\n\t\t\"ftl\": \"markup-templating\",\n\t\t\"gml\": \"clike\",\n\t\t\"glsl\": \"c\",\n\t\t\"go\": \"clike\",\n\t\t\"groovy\": \"clike\",\n\t\t\"haml\": \"ruby\",\n\t\t\"handlebars\": \"markup-templating\",\n\t\t\"haxe\": \"clike\",\n\t\t\"hlsl\": \"c\",\n\t\t\"java\": \"clike\",\n\t\t\"javadoc\": [\n\t\t\t\"markup\",\n\t\t\t\"java\",\n\t\t\t\"javadoclike\"\n\t\t],\n\t\t\"jolie\": \"clike\",\n\t\t\"jsdoc\": [\n\t\t\t\"javascript\",\n\t\t\t\"javadoclike\",\n\t\t\t\"typescript\"\n\t\t],\n\t\t\"js-extras\": \"javascript\",\n\t\t\"json5\": \"json\",\n\t\t\"jsonp\": \"json\",\n\t\t\"js-templates\": \"javascript\",\n\t\t\"kotlin\": \"clike\",\n\t\t\"latte\": [\n\t\t\t\"clike\",\n\t\t\t\"markup-templating\",\n\t\t\t\"php\"\n\t\t],\n\t\t\"less\": \"css\",\n\t\t\"lilypond\": \"scheme\",\n\t\t\"markdown\": \"markup\",\n\t\t\"markup-templating\": \"markup\",\n\t\t\"mongodb\": \"javascript\",\n\t\t\"n4js\": \"javascript\",\n\t\t\"nginx\": \"clike\",\n\t\t\"objectivec\": \"c\",\n\t\t\"opencl\": \"c\",\n\t\t\"parser\": \"markup\",\n\t\t\"php\": \"markup-templating\",\n\t\t\"phpdoc\": [\n\t\t\t\"php\",\n\t\t\t\"javadoclike\"\n\t\t],\n\t\t\"php-extras\": \"php\",\n\t\t\"plsql\": \"sql\",\n\t\t\"processing\": \"clike\",\n\t\t\"protobuf\": \"clike\",\n\t\t\"pug\": [\n\t\t\t\"markup\",\n\t\t\t\"javascript\"\n\t\t],\n\t\t\"purebasic\": \"clike\",\n\t\t\"purescript\": \"haskell\",\n\t\t\"qml\": \"javascript\",\n\t\t\"qore\": \"clike\",\n\t\t\"racket\": \"scheme\",\n\t\t\"jsx\": [\n\t\t\t\"markup\",\n\t\t\t\"javascript\"\n\t\t],\n\t\t\"tsx\": [\n\t\t\t\"jsx\",\n\t\t\t\"typescript\"\n\t\t],\n\t\t\"reason\": \"clike\",\n\t\t\"ruby\": \"clike\",\n\t\t\"sass\": \"css\",\n\t\t\"scss\": \"css\",\n\t\t\"scala\": \"java\",\n\t\t\"shell-session\": \"bash\",\n\t\t\"smarty\": \"markup-templating\",\n\t\t\"solidity\": \"clike\",\n\t\t\"soy\": \"markup-templating\",\n\t\t\"sparql\": \"turtle\",\n\t\t\"sqf\": \"clike\",\n\t\t\"swift\": \"clike\",\n\t\t\"t4-cs\": [\n\t\t\t\"t4-templating\",\n\t\t\t\"csharp\"\n\t\t],\n\t\t\"t4-vb\": [\n\t\t\t\"t4-templating\",\n\t\t\t\"vbnet\"\n\t\t],\n\t\t\"tap\": \"yaml\",\n\t\t\"tt2\": [\n\t\t\t\"clike\",\n\t\t\t\"markup-templating\"\n\t\t],\n\t\t\"textile\": \"markup\",\n\t\t\"twig\": \"markup\",\n\t\t\"typescript\": \"javascript\",\n\t\t\"vala\": \"clike\",\n\t\t\"vbnet\": \"basic\",\n\t\t\"velocity\": \"markup\",\n\t\t\"wiki\": \"markup\",\n\t\t\"xeora\": \"markup\",\n\t\t\"xml-doc\": \"markup\",\n\t\t\"xquery\": \"markup\"\n\t}/*]*/;\n\n\tvar lang_aliases = /*aliases_placeholder[*/{\n\t\t\"html\": \"markup\",\n\t\t\"xml\": \"markup\",\n\t\t\"svg\": \"markup\",\n\t\t\"mathml\": \"markup\",\n\t\t\"ssml\": \"markup\",\n\t\t\"atom\": \"markup\",\n\t\t\"rss\": \"markup\",\n\t\t\"js\": \"javascript\",\n\t\t\"g4\": \"antlr4\",\n\t\t\"adoc\": \"asciidoc\",\n\t\t\"shell\": \"bash\",\n\t\t\"shortcode\": \"bbcode\",\n\t\t\"rbnf\": \"bnf\",\n\t\t\"oscript\": \"bsl\",\n\t\t\"cs\": \"csharp\",\n\t\t\"dotnet\": \"csharp\",\n\t\t\"coffee\": \"coffeescript\",\n\t\t\"conc\": \"concurnas\",\n\t\t\"jinja2\": \"django\",\n\t\t\"dns-zone\": \"dns-zone-file\",\n\t\t\"dockerfile\": \"docker\",\n\t\t\"eta\": \"ejs\",\n\t\t\"xlsx\": \"excel-formula\",\n\t\t\"xls\": \"excel-formula\",\n\t\t\"gamemakerlanguage\": \"gml\",\n\t\t\"hs\": \"haskell\",\n\t\t\"gitignore\": \"ignore\",\n\t\t\"hgignore\": \"ignore\",\n\t\t\"npmignore\": \"ignore\",\n\t\t\"webmanifest\": \"json\",\n\t\t\"kt\": \"kotlin\",\n\t\t\"kts\": \"kotlin\",\n\t\t\"tex\": \"latex\",\n\t\t\"context\": \"latex\",\n\t\t\"ly\": \"lilypond\",\n\t\t\"emacs\": \"lisp\",\n\t\t\"elisp\": \"lisp\",\n\t\t\"emacs-lisp\": \"lisp\",\n\t\t\"md\": \"markdown\",\n\t\t\"moon\": \"moonscript\",\n\t\t\"n4jsd\": \"n4js\",\n\t\t\"nani\": \"naniscript\",\n\t\t\"objc\": \"objectivec\",\n\t\t\"objectpascal\": \"pascal\",\n\t\t\"px\": \"pcaxis\",\n\t\t\"pcode\": \"peoplecode\",\n\t\t\"pq\": \"powerquery\",\n\t\t\"mscript\": \"powerquery\",\n\t\t\"pbfasm\": \"purebasic\",\n\t\t\"purs\": \"purescript\",\n\t\t\"py\": \"python\",\n\t\t\"rkt\": \"racket\",\n\t\t\"rpy\": \"renpy\",\n\t\t\"robot\": \"robotframework\",\n\t\t\"rb\": \"ruby\",\n\t\t\"sh-session\": \"shell-session\",\n\t\t\"shellsession\": \"shell-session\",\n\t\t\"smlnj\": \"sml\",\n\t\t\"sol\": \"solidity\",\n\t\t\"sln\": \"solution-file\",\n\t\t\"rq\": \"sparql\",\n\t\t\"t4\": \"t4-cs\",\n\t\t\"trig\": \"turtle\",\n\t\t\"ts\": \"typescript\",\n\t\t\"tsconfig\": \"typoscript\",\n\t\t\"uscript\": \"unrealscript\",\n\t\t\"uc\": \"unrealscript\",\n\t\t\"vb\": \"visual-basic\",\n\t\t\"vba\": \"visual-basic\",\n\t\t\"xeoracube\": \"xeora\",\n\t\t\"yml\": \"yaml\"\n\t}/*]*/;\n\n\t/**\n\t * @typedef LangDataItem\n\t * @property {{ success?: () => void, error?: () => void }[]} callbacks\n\t * @property {boolean} [error]\n\t * @property {boolean} [loading]\n\t */\n\t/** @type {Object<string, LangDataItem>} */\n\tvar lang_data = {};\n\n\tvar ignored_language = 'none';\n\tvar languages_path = 'components/';\n\n\tvar script = Prism.util.currentScript();\n\tif (script) {\n\t\tvar autoloaderFile = /\\bplugins\\/autoloader\\/prism-autoloader\\.(?:min\\.)?js(?:\\?[^\\r\\n/]*)?$/i;\n\t\tvar prismFile = /(^|\\/)[\\w-]+\\.(?:min\\.)?js(?:\\?[^\\r\\n/]*)?$/i;\n\n\t\tvar autoloaderPath = script.getAttribute('data-autoloader-path');\n\t\tif (autoloaderPath != null) {\n\t\t\t// data-autoloader-path is set, so just use it\n\t\t\tlanguages_path = autoloaderPath.trim().replace(/\\/?$/, '/');\n\t\t} else {\n\t\t\tvar src = script.src;\n\t\t\tif (autoloaderFile.test(src)) {\n\t\t\t\t// the script is the original autoloader script in the usual Prism project structure\n\t\t\t\tlanguages_path = src.replace(autoloaderFile, 'components/');\n\t\t\t} else if (prismFile.test(src)) {\n\t\t\t\t// the script is part of a bundle like a custom prism.js from the download page\n\t\t\t\tlanguages_path = src.replace(prismFile, '$1components/');\n\t\t\t}\n\t\t}\n\t}\n\n\tvar config = Prism.plugins.autoloader = {\n\t\tlanguages_path: languages_path,\n\t\tuse_minified: true,\n\t\tloadLanguages: loadLanguages\n\t};\n\n\n\t/**\n\t * Lazily loads an external script.\n\t *\n\t * @param {string} src\n\t * @param {() => void} [success]\n\t * @param {() => void} [error]\n\t */\n\tfunction addScript(src, success, error) {\n\t\tvar s = document.createElement('script');\n\t\ts.src = src;\n\t\ts.async = true;\n\t\ts.onload = function () {\n\t\t\tdocument.body.removeChild(s);\n\t\t\tsuccess && success();\n\t\t};\n\t\ts.onerror = function () {\n\t\t\tdocument.body.removeChild(s);\n\t\t\terror && error();\n\t\t};\n\t\tdocument.body.appendChild(s);\n\t}\n\n\t/**\n\t * Returns all additional dependencies of the given element defined by the `data-dependencies` attribute.\n\t *\n\t * @param {Element} element\n\t * @returns {string[]}\n\t */\n\tfunction getDependencies(element) {\n\t\tvar deps = (element.getAttribute('data-dependencies') || '').trim();\n\t\tif (!deps) {\n\t\t\tvar parent = element.parentElement;\n\t\t\tif (parent && parent.tagName.toLowerCase() === 'pre') {\n\t\t\t\tdeps = (parent.getAttribute('data-dependencies') || '').trim();\n\t\t\t}\n\t\t}\n\t\treturn deps ? deps.split(/\\s*,\\s*/g) : [];\n\t}\n\n\t/**\n\t * Returns whether the given language is currently loaded.\n\t *\n\t * @param {string} lang\n\t * @returns {boolean}\n\t */\n\tfunction isLoaded(lang) {\n\t\tif (lang.indexOf('!') >= 0) {\n\t\t\t// forced reload\n\t\t\treturn false;\n\t\t}\n\n\t\tlang = lang_aliases[lang] || lang; // resolve alias\n\n\t\tif (lang in Prism.languages) {\n\t\t\t// the given language is already loaded\n\t\t\treturn true;\n\t\t}\n\n\t\t// this will catch extensions like CSS extras that don't add a grammar to Prism.languages\n\t\tvar data = lang_data[lang];\n\t\treturn data && !data.error && data.loading === false;\n\t}\n\n\t/**\n\t * Returns the path to a grammar, using the language_path and use_minified config keys.\n\t *\n\t * @param {string} lang\n\t * @returns {string}\n\t */\n\tfunction getLanguagePath(lang) {\n\t\treturn config.languages_path + 'prism-' + lang + (config.use_minified ? '.min' : '') + '.js'\n\t}\n\n\t/**\n\t * Loads all given grammars concurrently.\n\t *\n\t * @param {string[]|string} languages\n\t * @param {(languages: string[]) => void} [success]\n\t * @param {(language: string) => void} [error] This callback will be invoked on the first language to fail.\n\t */\n\tfunction loadLanguages(languages, success, error) {\n\t\tif (typeof languages === 'string') {\n\t\t\tlanguages = [languages];\n\t\t}\n\n\t\tvar total = languages.length;\n\t\tvar completed = 0;\n\t\tvar failed = false;\n\n\t\tif (total === 0) {\n\t\t\tif (success) {\n\t\t\t\tsetTimeout(success, 0);\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\n\t\tfunction successCallback() {\n\t\t\tif (failed) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tcompleted++;\n\t\t\tif (completed === total) {\n\t\t\t\tsuccess && success(languages);\n\t\t\t}\n\t\t}\n\n\t\tlanguages.forEach(function (lang) {\n\t\t\tloadLanguage(lang, successCallback, function () {\n\t\t\t\tif (failed) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tfailed = true;\n\t\t\t\terror && error(lang);\n\t\t\t});\n\t\t});\n\t}\n\n\t/**\n\t * Loads a grammar with its dependencies.\n\t *\n\t * @param {string} lang\n\t * @param {() => void} [success]\n\t * @param {() => void} [error]\n\t */\n\tfunction loadLanguage(lang, success, error) {\n\t\tvar force = lang.indexOf('!') >= 0;\n\n\t\tlang = lang.replace('!', '');\n\t\tlang = lang_aliases[lang] || lang;\n\n\t\tfunction load() {\n\t\t\tvar data = lang_data[lang];\n\t\t\tif (!data) {\n\t\t\t\tdata = lang_data[lang] = {\n\t\t\t\t\tcallbacks: []\n\t\t\t\t};\n\t\t\t}\n\t\t\tdata.callbacks.push({\n\t\t\t\tsuccess: success,\n\t\t\t\terror: error\n\t\t\t});\n\n\t\t\tif (!force && isLoaded(lang)) {\n\t\t\t\t// the language is already loaded and we aren't forced to reload\n\t\t\t\tlanguageCallback(lang, 'success');\n\t\t\t} else if (!force && data.error) {\n\t\t\t\t// the language failed to load before and we don't reload\n\t\t\t\tlanguageCallback(lang, 'error');\n\t\t\t} else if (force || !data.loading) {\n\t\t\t\t// the language isn't currently loading and/or we are forced to reload\n\t\t\t\tdata.loading = true;\n\t\t\t\tdata.error = false;\n\n\t\t\t\taddScript(getLanguagePath(lang), function () {\n\t\t\t\t\tdata.loading = false;\n\t\t\t\t\tlanguageCallback(lang, 'success');\n\n\t\t\t\t}, function () {\n\t\t\t\t\tdata.loading = false;\n\t\t\t\t\tdata.error = true;\n\t\t\t\t\tlanguageCallback(lang, 'error');\n\t\t\t\t});\n\t\t\t}\n\t\t};\n\n\t\tvar dependencies = lang_dependencies[lang];\n\t\tif (dependencies && dependencies.length) {\n\t\t\tloadLanguages(dependencies, load, error);\n\t\t} else {\n\t\t\tload();\n\t\t}\n\t}\n\n\t/**\n\t * Runs all callbacks of the given type for the given language.\n\t *\n\t * @param {string} lang\n\t * @param {\"success\" | \"error\"} type\n\t */\n\tfunction languageCallback(lang, type) {\n\t\tif (lang_data[lang]) {\n\t\t\tvar callbacks = lang_data[lang].callbacks;\n\t\t\tfor (var i = 0, l = callbacks.length; i < l; i++) {\n\t\t\t\tvar callback = callbacks[i][type];\n\t\t\t\tif (callback) {\n\t\t\t\t\tsetTimeout(callback, 0);\n\t\t\t\t}\n\t\t\t}\n\t\t\tcallbacks.length = 0;\n\t\t}\n\t}\n\n\tPrism.hooks.add('complete', function (env) {\n\t\tvar element = env.element;\n\t\tvar language = env.language;\n\t\tif (!element || !language || language === ignored_language) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar deps = getDependencies(element);\n\t\tif (/^diff-./i.test(language)) {\n\t\t\t// the \"diff-xxxx\" format is used by the Diff Highlight plugin\n\t\t\tdeps.push('diff');\n\t\t\tdeps.push(language.substr('diff-'.length));\n\t\t} else {\n\t\t\tdeps.push(language);\n\t\t}\n\n\t\tif (!deps.every(isLoaded)) {\n\t\t\t// the language or some dependencies aren't loaded\n\t\t\tloadLanguages(deps, function () {\n\t\t\t\tPrism.highlightElement(element);\n\t\t\t});\n\t\t}\n\t});\n\n}());\n"],"sourceRoot":""}